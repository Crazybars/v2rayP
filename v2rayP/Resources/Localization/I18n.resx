<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ComingSoon" xml:space="preserve">
    <value>This feature is coming soon!</value>
  </data>
  <data name="FormAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="FormEditServers" xml:space="preserve">
    <value>Edit Servers</value>
  </data>
  <data name="FormSetting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="FormShowLog" xml:space="preserve">
    <value>Log</value>
  </data>
  <data name="Logging" xml:space="preserve">
    <value>logging</value>
  </data>
  <data name="MenuGroupHelp" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="MenuGroupPAC" xml:space="preserve">
    <value>PAC</value>
  </data>
  <data name="MenuGroupProxyMode" xml:space="preserve">
    <value>Proxy Mode</value>
  </data>
  <data name="MenuGroupServers" xml:space="preserve">
    <value>Servers</value>
  </data>
  <data name="MenuItemAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="MenuItemCheckForUpdate" xml:space="preserve">
    <value>Check For Update</value>
  </data>
  <data name="MenuItemCopyPACScriptURL" xml:space="preserve">
    <value>Copy PAC Script URL</value>
  </data>
  <data name="MenuItemDirectMode" xml:space="preserve">
    <value>Direct Mode</value>
  </data>
  <data name="MenuItemEditServers" xml:space="preserve">
    <value>Edit Servers</value>
  </data>
  <data name="MenuItemEditUserRules" xml:space="preserve">
    <value>Edit User Rules</value>
  </data>
  <data name="MenuItemExit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="MenuItemFeedback" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="MenuItemGlobalMode" xml:space="preserve">
    <value>Global Mode</value>
  </data>
  <data name="MenuItemKeepSystemProxyMode" xml:space="preserve">
    <value>Keep System Proxy</value>
  </data>
  <data name="MenuItemPacMode" xml:space="preserve">
    <value>PAC Mode</value>
  </data>
  <data name="MenuItemSetting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="MenuItemShowLog" xml:space="preserve">
    <value>Show Log</value>
  </data>
  <data name="MenuItemUpdateGFWList" xml:space="preserve">
    <value>Update GFWList</value>
  </data>
  <data name="MenuItemWiki" xml:space="preserve">
    <value>Wiki</value>
  </data>
  <data name="MsgCantFindV2Ray" xml:space="preserve">
    <value>Can't find {0} in {1}</value>
  </data>
  <data name="MsgFailToCreateDirectoryFor" xml:space="preserve">
    <value>Fail to initialize directory for {0}. please make sure directory "{1}" is not occupied.</value>
  </data>
  <data name="MsgFailToExtractPrivoxy" xml:space="preserve">
    <value>Failed to initialize Privoxy.</value>
  </data>
  <data name="MsgFailToWriteJSON" xml:space="preserve">
    <value>Failed to write JSON file to {0}. Reason: {1}.</value>
  </data>
  <data name="MsgFallbackToDirectUpdateGFWList" xml:space="preserve">
    <value>Update GFWList via direct link due to inactivity of v2ray core program</value>
  </data>
  <data name="MsgInstanceExist" xml:space="preserve">
    <value>{0} has been running.</value>
  </data>
  <data name="MsgPleaseInputAddress" xml:space="preserve">
    <value>Please input a server address.</value>
  </data>
  <data name="MsgPleaseInputId" xml:space="preserve">
    <value>Please input VMess user id.</value>
  </data>
  <data name="MsgPleaseInvalidNumberField" xml:space="preserve">
    <value>Invalid {0}!
Range: {1}
Default: {2}</value>
  </data>
  <data name="MsgPleaseSelectGivenValues" xml:space="preserve">
    <value>Please select {0} from given values.</value>
  </data>
  <data name="MsgV2RayFailedToStart" xml:space="preserve">
    <value>Start v2ray-core failed, please check the log for detail.</value>
  </data>
  <data name="MsgV2RayFailedToStartDueToInexistence" xml:space="preserve">
    <value>Failed to start v2ray-core because v2ray core doesn't exist, please put it in the folder "{0}"</value>
  </data>
  <data name="MsgV2RayIsTooOld" xml:space="preserve">
    <value>The v2ray-core is too old. The minimum required version is {0}</value>
  </data>
  <data name="NewV2RayServer" xml:space="preserve">
    <value>V2Ray Server</value>
  </data>
  <data name="NoAvailableServers" xml:space="preserve">
    <value>No Available Servers</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="NotifyIconTextTemplate" xml:space="preserve">
    <value>Mode: {0}
Server: {1}</value>
  </data>
  <data name="ProxyModeDirect" xml:space="preserve">
    <value>Direct Mode</value>
  </data>
  <data name="ProxyModeGlobal" xml:space="preserve">
    <value>Global Mode</value>
  </data>
  <data name="ProxyModeKeepSystemProxy" xml:space="preserve">
    <value>Keep System Proxy</value>
  </data>
  <data name="ProxyModePac" xml:space="preserve">
    <value>PAC Mode</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SettingFormAcceptLAN" xml:space="preserve">
    <value>Accept LAN Connections</value>
  </data>
  <data name="SettingFormAutoStart" xml:space="preserve">
    <value>AutoStart</value>
  </data>
  <data name="SettingFormEnableAccessLog" xml:space="preserve">
    <value>Enable Access Log</value>
  </data>
  <data name="SettingFormEnableErrorLog" xml:space="preserve">
    <value>Enable Error Log</value>
  </data>
  <data name="SettingFormGFWListURL" xml:space="preserve">
    <value>GFWList URL:</value>
  </data>
  <data name="SettingFormHTTPPort" xml:space="preserve">
    <value>HTTP Proxy Port</value>
  </data>
  <data name="SettingFormLocalProxySetting" xml:space="preserve">
    <value>Local Proxy Setting</value>
  </data>
  <data name="SettingFormLogLevel" xml:space="preserve">
    <value>Log Level:</value>
  </data>
  <data name="SettingFormPACServerPort" xml:space="preserve">
    <value>PAC Server Port:</value>
  </data>
  <data name="SettingFormSOCKPort" xml:space="preserve">
    <value>SOCK5 Proxy Port:</value>
  </data>
  <data name="SettingFormUpdateViaProxy" xml:space="preserve">
    <value>Update Via Proxy</value>
  </data>
  <data name="SettingFormV2RayPSetting" xml:space="preserve">
    <value>v2rayP Setting</value>
  </data>
  <data name="UpdateGFWListFailed" xml:space="preserve">
    <value>Failed to update GFWList.</value>
  </data>
  <data name="UpdateGFWListSuccess" xml:space="preserve">
    <value>Successfully updated GFWList.</value>
  </data>
</root>